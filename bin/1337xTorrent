#!/bin/bash
#
# This shell script dumps magnet links from 1337x and open them on qbittorrent
#
#
#External script with ansi escape codes for decoratin.
source colors


printf "${ORANGE}Donwload Torrent without ${LIGHT_RED}ADS!! \n ${NDC} "

parameters=()


#Function to concatenate strings
#Games, Movies, TV(for series), Music and Anime
strCon()
{
	for i in $@
	do
		case $i in
			"Games") :;;
			"Movies") : ;;
			"TV") : ;;
			"Music") : ;;
			"Anime") : ;;
			"--dump") :;;
			"--help") : ;;
			*) str+="$i+" ;;
		
		esac
	done	
	echo "$str"   
}



#Function used to search the content based on category 
download()
{


    page=`lynx -dump -listonly https://1337x.to/category-search/$2/"$1"/1/ | awk '{print $2}' | grep ".to/torrent"   `

    query=($page)
    select opt in "${query[@]}"  quit
        do
	    case $opt in
                "quit")
                exit

            esac
        
	
	clear			

    total_size=`lynx -dump  $opt | grep 'Total size' | awk '{print $4}'`
    unity=`lynx -dump  $opt | grep 'Total size' | awk '{print $5}'`
	magnet=`lynx -dump -listonly $opt | awk '{print $2}' | grep magnet`
    query_magnet=($magnet)
			
	printf  "${LIGHT_PURPLE}Total size: $total_size $unity\n ${NDC}"
 
	read -p  "Is this okay? Yes/No:  " okay

	if [ $okay == "Yes"  ] || [ $okay == "yes" ] || [ $okay == "YES" ] || [ $okay == "y" ];then
	    qbittorrent ${query_magnet[0]}& 
	else
	    exit
	fi		
		
		sleep 2
		clear
        exit

    done    
}

#How the name proposes, search for anything in any category 
download_anyShit()
{


    page=`lynx -dump -listonly https://1337x.to/search/$1/1/ | awk '{print $2}' | grep ".to/torrent"   `
	
    query=($page)
    select opt in "${query[@]}"  quit
        do

            case $opt in
                "quit")
                    exit

            esac

			clear			
            total_size=`lynx -dump  $opt | grep 'Total size' | awk '{print $4}'`
            unity=`lynx -dump  $opt | grep 'Total size' | awk '{print $5}'`
			magnet=`lynx -dump -listonly $opt | awk '{print $2}' | grep magnet`
           	query_magnet=($magnet)
			
			printf  "${LIGHT_PURPLE}Total size: $total_size $unity\n ${NDC}"
			read -p  "Is this okay? Yes/No:  " okay

	if [ $okay == "Yes"  ] || [ $okay == "yes" ] || [ $okay == "YES" ] || [ $okay == "y" ];then
				qbittorrent ${query_magnet[0]}&
			else
				exit
			fi		

		sleep 2
		clear
        exit

        done
}

#Filtering the user's parameters 
options()
{
	
	for i in $@
	do	
		case $i in
			--dump) if [ $# -ge 3 ]; then 
						page=`lynx -dump -listonly https://1337x.to/category-search/$oneLineQuery/$1/1/ | awk '{print $2}' | grep ".to/torrent" >> dump.txt` 
						printf "${BLUE}>Dumping links${NDC}\n"
						exit
					elif [ $# -eq 2 ]; then 
			 			page=`lynx -dump -listonly https://1337x.to/search/$oneLineQuery/1/ | awk '{print $2}' | grep ".to/torrent" >> dump.txt`   
						printf "${BLUE}>Dumping links${NDC}\n"  
						exit
					else
						printf "${RED}Usage: 1337xTorrent {search query} --dump or 1337xTorrent {category} {search query} --dump${NDC} \n"
						exit 
					fi;;

			--help) echo "Usage : "; echo "--dump: Dump a list of the search results."; echo "--help: Show this screen" ; exit;;
			 	 
		esac
	done		 
		for i in $@
		do
			case $i in
				"Games") main_menu $i $oneLineQuery;;
			   "Movies") main_menu $i $oneLineQuery ;;
			       "TV") main_menu $i $oneLineQuery;;
				"Music") main_menu $i $oneLineQuery ;;
				"Anime") main_menu $i $oneLineQuery ;;
				      *) download_anyShit $oneLineQuery;;
			esac
		done
}


main_menu(){

		

	if [ $1 == "Movies" ]; then
		download $1 $2
	
	elif [ $1 == "TV"  ]; then
		tv="TV"
		download $1 $2
	
	elif [ $1 == "Games"  ]; then
		download $1 $2
	
	elif [ $1 == "Anime" ];then
		anime="Anime"
		download $1 $2

	else
		printf "${LIGHT_PURPLE}Example: 1337xtorrent Games Solasta \n"
		printf "Avaliable options: Games, Movies, TV(for series), Music and Anime\n ${NDC}"
	fi

}

#Checks if the user has lynx installed on the machine
if ! command -v lynx &> /dev/null
then
	printf "${LIGHT_PURPLE}Lynx not found\n"
	printf "You need to install lynx\n ${NDC}"
else

#Separating query from parameters
oneLineQuery=$(strCon $@)


if [ $# -eq 0  ]; then
	main_menu $1 $2 2> /dev/null
elif [  $# -ge 3  ]; then
	for i in $@
	do
		paraOP+=($i)
	done
	options "${paraOP[@]}"
elif [ $# -eq 1 ]; then
	options $1
else
	options $1 $2
fi

fi

